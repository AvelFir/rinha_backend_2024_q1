version: "3.9"

services:
  api01: &api
    hostname: api01
    image: avelfir/crebito:latest
    restart: on-failure
    environment:
      - DB_HOSTNAME=db
      - PORT=20000
      - JVM_XMS=110m
      - JVM_XMX=110m
      - CONTAINER_MEMORY=234m
      - NEW_SIZE=5m
      - MAX_NEW_SIZE=5m
      - MIN_HEAP_FREE_RATIO=30
      - MAX_HEAP_FREE_RATIO=70
      - MIN_POOL_CONNECTION=2
      - MAX_POOL_CONNECTION=2
      - LOG_LEVEL=OFF
      - JAVA_OPTS=-Dcom.sun.management.jmxremote \
        -Dcom.sun.management.jmxremote.port=3001 \
        -Dcom.sun.management.jmxremote.rmi.port=3001 \
        -Dcom.sun.management.jmxremote.ssl=false \
        -Dcom.sun.management.jmxremote.authenticate=false \
        -Djava.rmi.server.hostname=localhost
    ports:
      - "3001:20000"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "234MB"

  api02:
    <<: *api
    hostname: api02
    environment:
      - DB_HOSTNAME=db
      - PORT=20000
      - JVM_XMS=110m
      - JVM_XMX=110m
      - CONTAINER_MEMORY=234m
      - NEW_SIZE=5m
      - MAX_NEW_SIZE=5m
      - MIN_HEAP_FREE_RATIO=30
      - MAX_HEAP_FREE_RATIO=70
      - MIN_POOL_CONNECTION=2
      - MAX_POOL_CONNECTION=2
      - LOG_LEVEL=OFF
      - JAVA_OPTS=-Dcom.sun.management.jmxremote \
          -Dcom.sun.management.jmxremote.port=3002 \
          -Dcom.sun.management.jmxremote.rmi.port=3002 \
          -Dcom.sun.management.jmxremote.ssl=false \
          -Dcom.sun.management.jmxremote.authenticate=false \
          -Djava.rmi.server.hostname=localhost
    ports:
      - "3002:20000"
    networks:
      - default

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "15MB"
    networks:
      - default

  db:
    image:  postgres:15.3-bullseye
    container_name: db
    restart: on-failure
    hostname: db
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '67MB'
    ports:
      - "5433:5432"
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:z
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "rinha"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 20s
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    networks:
      - default


networks:
  default:
    driver: bridge